version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: agent-chat-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: agentchat
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./apps/api/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis (可选，用于缓存和会话)
  redis:
    image: redis:7-alpine
    container_name: agent-chat-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  # API 后端服务
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: agent-chat-api
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/agentchat?schema=public
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production-9a8b7c6d5e4f3g2h1i
      - REDIS_URL=redis://redis:6379
      - CORS_ORIGINS=http://localhost:3000,http://localhost:19006
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/api:/app
      - /app/node_modules
    command: pnpm run start:dev

  # Web 前端服务
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: agent-chat-web
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001/api/v1
      - NEXT_PUBLIC_WS_URL=ws://localhost:3001
    depends_on:
      - api
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
    command: pnpm run dev

volumes:
  postgres_data:
  redis_data: 